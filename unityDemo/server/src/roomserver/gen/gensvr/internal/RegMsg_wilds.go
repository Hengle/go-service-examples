package internal

// Code generated by gen. Do not edit!
// 代码由 gen 生成。不要手工编辑！

import (
	"usercmd"

	"zeus/net/server"
)

// 注册消息.
func RegMsg_wilds(svr *server.Server) {
	regMsg2ID_wilds(svr)
	regMsgCreators_wilds(svr)
}

// 注册消息ID, 用于发送消息.
func regMsg2ID_wilds(svr *server.Server) {
	// [ServerToClient] 注册发送的消息。需要从类型获取ID。
	svr.RegMsg2ID(&usercmd.MsgLoginResult{}, 1001)
	svr.RegMsg2ID(&usercmd.MsgTop{}, 1002)
	svr.RegMsg2ID(&usercmd.MsgAddPlayer{}, 1003)
	svr.RegMsg2ID(&usercmd.MsgRemovePlayer{}, 1004)
	svr.RegMsg2ID(&usercmd.MsgS2CRelife{}, 1009)
	svr.RegMsg2ID(&usercmd.MsgDeath{}, 1010)
	svr.RegMsg2ID(&usercmd.MsgEndRoom{}, 1011)
	svr.RegMsg2ID(&usercmd.MsgRefreshPlayer{}, 1013)
	svr.RegMsg2ID(&usercmd.ClientHeartBeat{}, 1016)
	svr.RegMsg2ID(&usercmd.MsgActCloseSocket{}, 1021)
	svr.RegMsg2ID(&usercmd.MsgSceneTCP{}, 1031)
	svr.RegMsg2ID(&usercmd.MsgSceneUDP{}, 1032)

}

// 注册消息创建器，用于接收数据后创建消息。
func regMsgCreators_wilds(svr *server.Server) {
	// [ClientToServer] 注册接收的消息。需要从ID创建消息。
	svr.RegMsgCreator(1001, func() server.IMsg { return &usercmd.MsgLogin{} })
	svr.RegMsgCreator(1006, func() server.IMsg { return &usercmd.MsgMove{} })
	svr.RegMsgCreator(1007, func() server.IMsg { return &usercmd.MsgRun{} })
	svr.RegMsgCreator(1009, func() server.IMsg { return &usercmd.MsgRelife{} })
	svr.RegMsgCreator(1016, func() server.IMsg { return &usercmd.ClientHeartBeat{} })
	svr.RegMsgCreator(1020, func() server.IMsg { return &usercmd.MsgSceneChat{} })
	svr.RegMsgCreator(1050, func() server.IMsg { return &usercmd.MsgCastSkill{} })

}
